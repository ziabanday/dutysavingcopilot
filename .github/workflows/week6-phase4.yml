name: Week-6 Phase-4 â€” Offline-first CI + Optional Online Smoke

on:
  push:
    branches: [ main, develop, "**/week6**", "**/week6-*", "**/phase4**" ]
  pull_request:
  workflow_dispatch:

jobs:
  tests-offline:
    name: Offline tests (deterministic, no network)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (offline-friendly)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run pytest (offline)
        env:
          NO_NETWORK: "1"
          OPENAI_API_MOCK: "1"
          OPENAI_API_KEY: "dummy"
          MIN_SCORE: "0.0"
          PYTHONPATH: ${{ github.workspace }}
          METRICS_JSON: artifacts/metrics/offline-metrics.jsonl
        run: |
          mkdir -p artifacts/test-results
          mkdir -p artifacts/metrics
          pytest -q --junitxml=artifacts/test-results/junit.xml 2>&1 | tee artifacts/test-results/pytest-stdout.txt

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results-offline
          path: artifacts/test-results/*
          if-no-files-found: warn

      - name: Upload metrics (offline)
        uses: actions/upload-artifact@v4
        with:
          name: metrics-offline
          path: artifacts/metrics/*
          if-no-files-found: warn

      - name: Summarize retrieval metrics (offline)
        if: always()
        shell: bash
        run: |
          echo "### Offline retrieval metrics" >> "$GITHUB_STEP_SUMMARY"
          if [ -f artifacts/metrics/offline-metrics.jsonl ]; then
            echo "- events: $(wc -l < artifacts/metrics/offline-metrics.jsonl | tr -d ' ')" >> "$GITHUB_STEP_SUMMARY"
            echo "- file: artifacts/metrics/offline-metrics.jsonl" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "- no metrics file emitted" >> "$GITHUB_STEP_SUMMARY"
          fi

  tests-online:
    name: Online pgvector smoke (gated)
    if: ${{ secrets.PG_DSN != '' }}
    runs-on: ubuntu-latest
    env:
      PG_DSN: ${{ secrets.PG_DSN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run pytest (online pgvector smoke)
        env:
          METRICS_JSON: artifacts/metrics/online-metrics.jsonl
        run: |
          mkdir -p artifacts/test-results-online
          mkdir -p artifacts/metrics
          pytest -q -m "online and pgvector" --junitxml=artifacts/test-results-online/junit.xml 2>&1 | tee artifacts/test-results-online/pytest-stdout.txt

      - name: Upload online artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results-online
          path: artifacts/test-results-online/*
          if-no-files-found: warn

      - name: Upload metrics (online)
        uses: actions/upload-artifact@v4
        with:
          name: metrics-online
          path: artifacts/metrics/*
          if-no-files-found: warn

      - name: Summarize retrieval metrics (online)
        if: always()
        shell: bash
        run: |
          echo "### Online retrieval metrics" >> "$GITHUB_STEP_SUMMARY"
          if [ -f artifacts/metrics/online-metrics.jsonl ]; then
            echo "- events: $(wc -l < artifacts/metrics/online-metrics.jsonl | tr -d ' ')" >> "$GITHUB_STEP_SUMMARY"
            echo "- file: artifacts/metrics/online-metrics.jsonl" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "- no metrics file emitted" >> "$GITHUB_STEP_SUMMARY"
          fi
